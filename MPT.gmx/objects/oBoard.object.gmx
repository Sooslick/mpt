<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>board</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale=4
xcurr=100
diff = 0
arop = 0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.mouserev
  dx = (-mouse_x+800)/1.5
else
  dx =   mouse_x/1.5
if dx&gt;400
  dx = 400
else if dx &lt; 0
  dx = 0
dx-=200
  
j = degtorad(rot+angle_difference(point_direction(0,0,dx,210),point_direction(0,0,0,210)))
i = point_distance(0,0,dx,210)
x = 300+i*sin(j)
y = 300+i*cos(j)
image_angle = rot

/*x=100+xcurr
if x&gt;500
  x = 500
diff+= x - xprevious
if diff &gt; 5
  {
  diff-= 5
  arop = (diff/2)/256 + 0.5
  }
else if diff &lt; 5
  {
  diff+= 5
  arop = (-diff/2)/256 + 0.5
  }
else
  diff = 0*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dist=point_distance(300,300,x,y)
currrot=degtorad(point_direction(300,300,x,y)+GameRuler.rot) 
drawx=300-dist*cos(currrot)
drawy=300+dist*sin(currrot)
draw_sprite_ext(board,0,drawx,drawy,image_xscale,1,GameRuler.rot+rot,global.bbcl,1)
/*if diff &gt; 1
  {
  draw_sprite_ext(Arrow,0,350,580,1,1,0,c_red,arop)
  draw_sprite_ext(Arrow,0,250,580,1,1,180,c_maroon,0.5)
  }  
else if diff &lt; 1
  {
  draw_sprite_ext(Arrow,0,350,580,1,1,0,c_maroon,0.5)
  draw_sprite_ext(Arrow,0,250,580,1,1,180,c_red,arop)
  }  
else
  {
  draw_sprite_ext(Arrow,0,350,580,1,1,0,c_maroon,0.5)
  draw_sprite_ext(Arrow,0,250,580,1,1,180,c_maroon,0.5)
  } */

//draw_text(300,550,string(rot)+'#'+string(dx)) 

//debug
//draw_sprite_ext(board,0,x,y,image_xscale,1.5,rot,c_red,0.5)

//ёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
