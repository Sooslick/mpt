<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(400,500,ButtonBack)
instance_create(400,375,ButtonGo)
gmode=0
maxplayers=2
diff=1
port='27015'
frag = 10
timer = 5
lv = 0
port_focus = false
active_element=0
global.EMenu=2

hintFrame = 0
rules='Points are awarded for each hit you miss. The player with least number of points wins the game.'
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if active_element == 2
  hintFrame++

if (mouse_y&gt;=100) and (mouse_y&lt;=132)
  {
  if mouse_x &lt; 400
    active_element=1
  else
    active_element=5
  }
else if (mouse_y&gt;=150) and (mouse_y&lt;=182)
  {
  if mouse_x &lt; 400
    active_element=2
  else
    active_element=6
  }
else if (mouse_y&gt;=200) and (mouse_y&lt;=232)
  {
  if mouse_x &lt; 400
    active_element=3
  else
    active_element=7
  }
else if (mouse_y&gt;=250) and (mouse_y&lt;=282)
  active_element=4
else  
  {
  active_element=0
  hintFrame = 0
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch active_element
  {
  case 1: 
    maxplayers--
    if maxplayers==1
      maxplayers=6
    break;
  case 2:
    gmode--
    if gmode==-1
      gmode=1
    if gmode==0
      rules='Points are awarded for each hit you miss. The player with least number of points wins the game.'
    else
      rules='Players who miss the ball drop out, and the last player receives points. The player with biggest number of points wins the game.'
    break;
  case 3:
    diff--
    if diff==-1
      diff=3
    break
  case 5:
    frag-=5
    if frag &lt; 0
      frag = 95
    break
  case 6:
    timer-=1
    if timer &lt; 0
      timer = 9
    break
  case 7:
    lv-=1
    if lv&lt;0
      lv = 5
    break
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>port_focus = false
switch active_element
  {
  case 1: 
    maxplayers++
    if maxplayers==7
      maxplayers=2
    break;
  case 2:
    gmode++
    if gmode==2
      gmode=0
    if gmode==0
      rules='Points are awarded for each hit you miss. The player with least number of points wins the game.'
    else
      rules='Players who miss the ball drop out, and the last player receives points. The player with biggest number of points wins the game.'
    break;
  case 3:
    diff++
    if diff==4
      diff=0
    break
  case 4:
    port_focus = true
    name = port
    break
  case 5:
    frag+=5
    if frag &gt; 95
      frag = 0
    break
  case 6:
    timer+=1
    if timer &gt; 9
      timer = 0
    break
  case 7:
    lv+=1
    if lv&gt;5
      lv = 0
    break
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center)
draw_set_color(200)
draw_set_font(ScreenFont32)
draw_set_alpha(1)
draw_text(400,16,'Server settings')

draw_set_font(ScreenFont24)

draw_sprite(TypeList,6,202,100)
draw_sprite(TypeList,2,202,150)
draw_sprite(TypeList,4,202,200)
draw_sprite(TypeList,4,202,250)
draw_sprite(TypeList,6,382,100)
draw_sprite(TypeList,6,382,150)
draw_sprite(TypeList,6,382,200)

switch active_element
  {
  case 1:
    draw_sprite(TypeList,7,202,100)
    break;
  case 2:
    draw_sprite(TypeList,3,202,150)
    break;
  case 3:
    draw_sprite(TypeList,5,202,200)
    break;
  case 4:
    draw_sprite(TypeList,5,202,250)
    break;
  case 5:
    draw_sprite(TypeList,7,382,100)
    break;
  case 6:
    draw_sprite(TypeList,7,382,150)
    break;
  case 7:
    draw_sprite(TypeList,7,382,200)
    break;
  }  
    
draw_text(330,100,maxplayers)

switch gmode
  {
  case 0: draw_text(330,150,'Classic'); break;
  case 1: draw_text(330,150,'Elimination'); break;
  }

switch diff
  {
  case 0: draw_text(330,200,'EZ'); break;
  case 1: draw_text(330,200,'Norm'); break;
  case 2: draw_text(330,200,'Hard'); break;
  case 3: draw_text(330,200,'Sweaty'); break;
  }
  
if port_focus
  {
  draw_set_color(254)  
  draw_text(330,250,name)
  draw_set_color(200)
  }
else
  draw_text(330,250,port)  
  
if frag==0
  draw_text(510,100,'-'); 
else
  if gmode==0
    draw_text(510,100,string(frag)); 
  else
    draw_text(510,100,string(frag div 5)); 
  
if timer==0
  draw_text(510,150,'-'); 
else
  draw_text(510,150,string(timer)); 
  
if lv==5
  draw_text(510,200,'R'); 
else
  draw_text(510,200,string(lv));  
draw_sprite(lvIco,lv,485,242)  
  
draw_set_halign(fa_right)
draw_text(215,100,'Max players')
draw_text(215,150,'Game mode')
draw_text(215,200,'Game difficulty')
draw_text(215,250,'Server port')

draw_set_halign(fa_left) 
draw_text(585,100,'Goal limit')
draw_text(585,150,'Time limit')
draw_text(585,200,'Level type')
 
draw_text(16,564,global.Nick)

if hintFrame&gt;60
  {
  draw_set_halign(fa_left)
  draw_set_font(ChatFont)
  draw_set_alpha(0.5)
  
  h = string_height_ext(rules,14,180) + 4
  w = string_width_ext(rules,14,180) + 4
  draw_set_color(0)
  draw_rectangle(mouse_x,mouse_y+16,mouse_x+w,mouse_y+16+h,false)
  draw_set_color(c_white)
  draw_text_ext(mouse_x+2,mouse_y+18,rules,14,180) 
  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if port_focus
  if (real(name)&lt;65536) and (real(name)&gt;999)
    port = name
port_focus = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if port_focus
  switch (keyboard_key)
    {
    case ord('1'): name+='1'; break;
    case ord('2'): name+='2'; break;
    case ord('3'): name+='3'; break;
    case ord('4'): name+='4'; break;
    case ord('5'): name+='5'; break;
    case ord('6'): name+='6'; break;
    case ord('7'): name+='7'; break;
    case ord('8'): name+='8'; break;
    case ord('9'): name+='9'; break;
    case ord('0'): name+='0'; break;
    case vk_backspace: name=string_copy(name,1,string_length(name)-1); break;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
